/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.openmarkov.core.gui.dialog.io;

import org.openmarkov.core.model.network.ProbNet;
import org.openmarkov.core.oopn.OOPNet;

/**
 *
 * @author ibermejo
 */
@SuppressWarnings("serial")
public class SaveOptions extends javax.swing.JDialog {

    /**
     * Creates new form SaveOptions
     */
    public SaveOptions(java.awt.Frame parent, ProbNet probNet, boolean modal) {
        super(parent, modal);
        initComponents();
        
        chkSavePlainNetwork.setEnabled(probNet instanceof OOPNet && !((OOPNet)probNet).getInstances ().isEmpty ());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        chkSavePlainNetwork = new javax.swing.JCheckBox();
        btnOk = new javax.swing.JButton();
        chkSaveEvidence = new javax.swing.JCheckBox();
        chkSavePolicies = new javax.swing.JCheckBox();
        chkSaveClassesInFile = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Save Options");

        chkSavePlainNetwork.setText("Save Plain Network");
        chkSavePlainNetwork.setEnabled(false);
        chkSavePlainNetwork.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkSavePlainNetworkActionPerformed(evt);
            }
        });

        btnOk.setText("OK");
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        chkSaveEvidence.setText("Save Evidence");
        chkSaveEvidence.setEnabled(false);

        chkSavePolicies.setText("Save Imposed Policies");
        chkSavePolicies.setEnabled(false);

        chkSaveClassesInFile.setText("Save Classes in file");
        chkSaveClassesInFile.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chkSaveEvidence)
                            .addComponent(chkSavePlainNetwork)
                            .addComponent(chkSavePolicies)
                            .addComponent(chkSaveClassesInFile)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(btnOk)))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(chkSavePlainNetwork)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chkSaveClassesInFile)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(chkSaveEvidence)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chkSavePolicies)
                .addGap(15, 15, 15)
                .addComponent(btnOk)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chkSavePlainNetworkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkSavePlainNetworkActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkSavePlainNetworkActionPerformed

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        setVisible(false);
    }//GEN-LAST:event_btnOkActionPerformed

    public boolean isSavePlainNetwork()
    {
        return chkSavePlainNetwork.isSelected ();
    }
    
    public boolean isSaveEvidence()
    {
        return chkSaveEvidence.isSelected ();
    }
    
    public boolean isSavePolicies()
    {
        return chkSavePolicies.isSelected ();
    }    
    
    public boolean isSaveClassesInFile()
    {
        return chkSaveClassesInFile.isSelected ();
    }
    
    public boolean isWorthShowing()
    {
        return chkSavePlainNetwork.isEnabled () ||
        chkSaveEvidence.isEnabled () ||
        chkSavePolicies.isEnabled () ||
        chkSaveClassesInFile.isEnabled ();
    }        
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOk;
    private javax.swing.JCheckBox chkSaveClassesInFile;
    private javax.swing.JCheckBox chkSaveEvidence;
    private javax.swing.JCheckBox chkSavePlainNetwork;
    private javax.swing.JCheckBox chkSavePolicies;
    // End of variables declaration//GEN-END:variables
}
